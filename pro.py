import asyncio
import pathlib
import json
from datetime import datetime
from pyrogram import Client
from aiogram import *
from aiogram.dispatcher.filters import Command
import time

bot_token = "6407840853:AAH99LMxEE-7R5OvKUjKYV7fMvwbSwjZ3Ls"
bot = Bot(token=bot_token)
api_id = 27847255
api_hash = "408e80faac6395c78a5051e4e40d956a"
SKABARYCH_ID = 1115914984
VIP_CHANNEL_ID = -1001977785674
dp = Dispatcher(bot=bot)
x = [1000, 2600, 4500]
flag_of_check = {}
flag_of_education = {}
members = []


async def n_sec_falser():
    time.sleep(1)
    return False


async def get_chat_members(chat_id):
    app = Client("ProTraderMakesMoneyBot", api_id=api_id, api_hash=api_hash, bot_token=bot_token, in_memory=True)
    chat_members = []
    await app.start()
    async for member in app.get_chat_members(chat_id):
        # print(member, end="\n\n------------\n\n")
        chat_members.append(member)
    await app.stop()
    return chat_members


@dp.message_handler(Command("start"))
async def start(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–û–±—É—á–µ–Ω–∏–µüíº')
    btn2 = types.KeyboardButton('ProTrader VIPüé©')
    btn3 = types.KeyboardButton('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüë®‚Äçüíª')
    markup.add(btn1, btn2, btn3)
    await message.answer("""üëã –ü—Ä–∏–≤–µ—Ç, —è ProTraderBot.
–†–∞—Å—Å–∫–∞–∂—É –æ –Ω–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏ –ø–æ–º–æ–≥—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤ VIP-–∫–ª—É–±.
1. –ß—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ 3-—Ö –º–µ—Å—è—á–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è —Ç—Ä–µ–π–¥–∏–Ω–≥—É –Ω–∞–∂–º–∏—Ç–µ ‚Äú–û–±—É—á–µ–Ω–∏–µ‚Äù
2. –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π vip –∫–ª—É–± –Ω–∞–∂–º–∏—Ç–µ ‚ÄúProTrader VIP‚Äù 
3. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–∏–æ–¥ —Å–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –≤ vip –∫–ª—É–±–µ –Ω–∞–∂–º–∏—Ç–µ ‚Äú–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç‚Äù""", reply_markup=markup)


@dp.message_handler(content_types=['text'])
async def get_message(message: types.Message):
    global flag_of_check
    global flag_of_education
    if message.text == '–û–±—É—á–µ–Ω–∏–µüíº':
        new_markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(f'–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ', callback_data='3')
        new_markup.add(btn1)
        await message.answer("""–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞:
<b> üìö–ö—É—Ä—Å ‚Äú–¢—Ä–µ–π–¥–∏–Ω–≥: –æ—Ç –Ω–æ–≤–∏—á–∫–∞ –¥–æ –ø—Ä–æ—Ñ–∏—Å—Å–∏–æ–Ω–∞–ª–∞‚Äù</b>
-—ç—Ç–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –æ—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–µ —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç–æ—Ä —Ç–µ–º, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —É—Å–ø–µ—à–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ–π –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö. 
    <b>24 –æ–±—É—á–∞—é—â–∏—Ö –≤–∏–¥–µ–æ </b> 
–£—á–µ–Ω–∏–∫ —Å–∞–º –ø—Ä–æ–¥—É–º—ã–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤–∏–¥–µ–æ <b>(–≤—ã—Å—ã–ª–∞—é—Ç—Å—è –í–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ ProTraderBot 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é)</b>
    <b>–ß–µ–º—É –Ω–∞—É—á–∏—Ç–µ—Å—å?</b>
1. –í—ã –∏–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞, –Ω–∞—É—á–∏—Ç–µ—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏, –∏–∑—É—á–∏—Ç–µ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.
2. –ö—É—Ä—Å –≤–∫–ª—é—á–∞–µ—Ç –≤–æ–ª–Ω–æ–≤—É—é —Ç–µ–æ—Ä–∏—é –≠–ª–ª–∏–æ—Ç–∞, –í—É–ª—å—Ñ–∞ –∏ –º–µ—Ç–æ–¥ –í–∞–π–∫–æ—Ñ—Ñ–∞
3. –í—ã –Ω–∞—É—á–∏—Ç–µ—Å—å –æ—Å–Ω–æ–≤–∞–º —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞, —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É, —Ä–µ–≤–µ—Ä—Å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ.
4. –ö—É—Ä—Å –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–ª–µ —Ñ—å—é—á–µ—Ä—Å–∞–º–∏,–æ–±–ª–∏–≥–∞—Ü–∏—è–º–∏, –∞ —Ç–∞–∫–∂–µ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∏ —Ä–∞–±–æ—Ç—ã —Å –æ—Ä–¥–µ—Ä-–±–ª–æ–∫–∞–º–∏.
5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤–∫–ª—é—á–∞—é—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –í–µ–ª–∏–∫–∞—è –î–µ–ø—Ä–µ—Å—Å–∏—è, –∫—Ä–∏–∑–∏—Å –¥–æ—Ç–∫–æ–º–æ–≤ –∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ 2008 –≥–æ–¥–∞, –†–µ—Ü–µ—Å—Å–∏—è –≤ —Å–≤—è–∑–∏ —Å –ø–∞–Ω–¥–µ–º–∏–µ–π COVID-19

<b>–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–º –≤ –º–∏—Ä–µ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞!

–ò –ø–æ–º–Ω–∏—Ç–µ: ‚Äú–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∑–Ω–∞–Ω–∏—è –¥–∞—é—Ç —Å–∞–º—ã–µ –≤—ã—Å–æ–∫–∏–µ –¥–∏–≤–∏–¥–µ–Ω–¥—ã‚Äù –ë.–§—Ä–∞–Ω–∫–ª–∏–Ω</b>

‚úÖ <b>–í–º–µ—Å—Ç–µ —Å –æ–±—É—á–∞—é—â–∏–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã:</b>
1) –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ø—Ä—è–º—ã–µ —ç—Ñ–∏—Ä—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π –ø–æ –∫—É—Ä—Å—É
2) –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
3) –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã
4) –î–æ—Å—Ç—É–ø –∫ –æ–±—É—á–∞—é—â–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –ù–ê–í–°–ï–ì–î–ê
5) <b>–ë–ï–°–ü–õ–ê–¢–ù–´–ô –î–û–°–¢–£–ü –í VIP –ö–ê–ù–ê–õ –ù–ê 3 –ú–ï–°–Ø–¶–ê</b>""", parse_mode='html', reply_markup=new_markup)

    elif message.text == 'ProTrader VIPüé©':
        new_markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(f'1 –º–µ—Å—è—Ü - {x[0]} —Ä—É–±–ª–µ–π', callback_data='0')
        btn2 = types.InlineKeyboardButton(f'3 –º–µ—Å—è—Ü–∞ - {x[1]} —Ä—É–±–ª–µ–π (-13,3%)', callback_data='1')
        btn3 = types.InlineKeyboardButton(f'5 –º–µ—Å—è—Ü–µ–≤ - {x[2]} —Ä—É–±–ª–µ–π (-19%)', callback_data='2')
        new_markup.add(btn1, btn2, btn3)
        await message.answer("""<b>ProTrader VIP</b> - —ç—Ç–æ –∫–ª—É–± —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ —Ç–æ—Ä–≥–æ–≤—ã–º –∏–¥–µ—è–º –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º –∞–∫—Ü–∏—è–º, –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∞ —Ç–∞–∫–∂–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–∑–æ—Ä—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (—Ñ—å—é—á–µ—Ä—Å—ã, –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã)

<b>! VIP-–∫–ª—É–± –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Ç—Ä–µ–π–¥–µ—Ä–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ —Å –¥–µ–ø–æ–∑–∏—Ç–æ–º (–∫–∞–ø–∏—Ç–∞–ª–æ–º) –æ—Ç 20.000 —Ä—É–±–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ñ–æ–Ω–¥–æ–≤–æ–º —Ä—ã–Ω–∫–µ.</b>

‚úÖ <b>–í –ø–æ–¥–ø–∏—Å–∫—É –≤—Ö–æ–¥–∏—Ç:</b>
1. –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞–∫—Ü–∏–π —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ü–µ–ª—è–º–∏ –∏ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞–º–∏
2. –î–æ—Å—Ç—É–ø –∫ —Å—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω–æ–º—É –ø–æ—Ä—Ç—Ñ–µ–ª—é ProTrader VIP  (—Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ü–µ–Ω—ã –ø–æ–∫—É–ø–∫–∏, –¥–æ–ª–∏ –≤ –æ–±—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è)
3. –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ø–µ–∫—É–ª—è—Ç–∏–≤–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ –∏–¥–µ–∏ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é
4. –ê–Ω–∞–ª–∏–∑ —Å—ã—Ä—å–µ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –≤–∞–ª—é—Ç
<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ç–∞—Ä–∏—Ñüëáüëáüëá</b>""", parse_mode='html', reply_markup=new_markup)

    elif (message.from_user.id in flag_of_check and flag_of_check[message.from_user.id]) or (
            message.from_user.id in flag_of_education and flag_of_education[message.from_user.id]):
        flag_of_check[message.from_user.id] = False
        flag_of_education[message.from_user.id] = False
        await message.answer('–ù–∞–¥–æ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!')

    elif message.text == '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüë®‚Äçüíª':
        # members = await get_chat_members(VIP_CHANNEL_ID)
        user_id = message.from_user.id
        isInChannel = False
        joined_date = 0
        for member in members.values():
            if (member[0]['id'] == user_id):
                isInChannel = True
                joined_date = datetime.strptime(member[1]['joined_date'], "%Y-%m-%d %H:%M:%S")
        if isInChannel:
            days_in_channel = datetime.now().date() - joined_date.date()
            await message.answer(f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ VIP –∫–ª—É–±–µ üëâ  {days_in_channel.days} –¥–Ω.', parse_mode='Markdown')
        else:
            await message.answer(
                '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫! \n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ProTrader VIPüé©',
                parse_mode='Markdown')


@dp.message_handler(content_types=['photo'])
async def handle_photo(message: types.Message):
    global flag_of_check
    global flag_of_education
    if message.from_user.id in flag_of_check and flag_of_check[message.from_user.id]:
        user_nickname = message.from_user.username
        await bot.send_message(SKABARYCH_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user_nickname}")
        await bot.send_photo(chat_id=SKABARYCH_ID, photo=message.photo[0].file_id)
        flag_of_check[message.from_user.id] = n_sec_falser()
        await message.answer("""–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ —É –í–∞—Å –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞!
–û–∂–∏–¥–∞–π—Ç–µ)""")
    elif flag_of_education[message.from_user.id]:
        user_nickname = message.from_user.username
        await bot.send_message(SKABARYCH_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user_nickname}")
        await bot.send_photo(chat_id=SKABARYCH_ID, photo=message.photo[0].file_id)
        flag_of_education[message.from_user.id] = n_sec_falser()
        await message.answer("""–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –í—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç–µ –∫ –æ–±—É—á–µ–Ω–∏—é!
–û–∂–∏–¥–∞–π—Ç–µ)""")


@dp.callback_query_handler(lambda callback_query: True)
async def handle_callback_query(callback_query: types.CallbackQuery):
    global flag_of_check
    global flag_of_education
    if '0' <= callback_query.data <= '2':
        user_id = callback_query.from_user.id
        flag_of_check[user_id] = True
        await bot.send_message(callback_query.from_user.id, f"""–û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø –í—ã –º–æ–∂–µ—Ç–µ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:
–†–µ–∫–≤–∏–∑–∏—Ç—ã

–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
40817 810 5 0110 2281398

–ë–ò–ö –±–∞–Ω–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
044525700

–§–∞–º–∏–ª–∏—è, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
–°–∫–∞–±–∞—Ä–æ –î–∞–Ω–∏–∏–ª –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
–î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª 

–ü–û–°–õ–ï –°–û–í–ï–†–®–ï–ù–ò–Ø –û–ü–õ–ê–¢–´, –û–¢–ü–†–ê–í–¨–¢–ï –ë–û–¢–£ –°–ö–†–ò–ù–®–û–¢. –ù–∞ —Å–∫—Ä–∏–Ω–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑—ã–≤–∞—Ç—å—Å—è:
–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
–°—á–µ—Ç –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è

–ö –æ–ø–ª–∞—Ç–µ: {x[int(callback_query.data)]} —Ä.""")

    elif callback_query.data == '3':
        user_id = callback_query.from_user.id
        flag_of_education[user_id] = True
        await bot.send_message(callback_query.from_user.id, f"""–û–ø–ª–∞—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:
–†–µ–∫–≤–∏–∑–∏—Ç—ã
–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
40817 810 5 0110 2281398
–ë–ò–ö –±–∞–Ω–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
044525700
–§–∞–º–∏–ª–∏—è, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
–°–∫–∞–±–∞—Ä–æ –î–∞–Ω–∏–∏–ª –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
–û–±—É—á–µ–Ω–∏–µ —Ç—Ä–µ–π–¥–∏–Ω–≥—É
–ü–û–°–õ–ï –°–û–í–ï–†–®–ï–ù–ò–Ø –û–ü–õ–ê–¢–´, –û–¢–ü–†–ê–í–¨–¢–ï –ë–û–¢–£ –°–ö–†–ò–ù–®–û–¢. –ù–∞ —Å–∫—Ä–∏–Ω–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑—ã–≤–∞—Ç—å—Å—è:
–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
–°—á–µ—Ç –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è

–ö –æ–ø–ª–∞—Ç–µ: 25 000 —Ä—É–±–ª–µ–π""")


async def main():
    global members
    if (
            datetime.now().hour == 9 and datetime.now().minute == 0 or datetime.now().hour == 21 and datetime.now().minute == 0):
        members = await get_chat_members(VIP_CHANNEL_ID)
        members_dict = {}
        cwd = pathlib.Path(__file__).parent.resolve()
        for member in members:
            # print(member)
            members_dict[member.user.username] = []
            members_dict[member.user.username].append({"id": member.user.id})
            members_dict[member.user.username].append({"joined_date": str(member.joined_date)})
        with open(str(cwd) + '/members.json', 'w', encoding='utf-8') as file:
            print(members_dict)
            json.dump(members_dict, file)
    else:
        with open('members.json') as file:
            members = json.load(file)
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
